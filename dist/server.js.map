{"version":3,"sources":["../src/server.js"],"names":["graphqlHTTP","require","maskErrors","jwt","session","flash","crypto","axios","querystring","admin","serviceAccount","initializeApp","credential","cert","BearerStrategy","Strategy","use","token","cb","console","log","user","verify","PARENT_APP_TOKEN","err","message","GRAPHQL_PORT","graphQLServer","secret","resave","saveUninitialized","cookie","secure","initialize","corsOptions","origin","callback","credentials","allowCrossDomain","req","res","next","header","authenticate","startTime","Date","now","request","schema","graphiql","context","extensions","document","variables","operationName","result","runTime","json","urlencoded","extended","post","status","send","body","to","split","text","options","url","headers","error","response","statusCode","data","failureFlash","sign","id","auth","mutate","query","databases","email","expiresIn","phone","companiesLogo","shareDB","ParentGlobal","find","where","parent","get","registrationToken","params","payload","title","actions","JSON","stringify","icon","foreground","inline","replyLabel","messaging","sendToDevice","contentAvailable","priority","restrictedPackageName","then","catch","api_url","query_string","companyCode","app_code","code","companyData","include","model","ParentToken","attributes","required","tokens","tb_parent_tokens","map","item","push_token","Object","assign","msg","listen"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express';\nconst graphqlHTTP = require('express-graphql');\nimport bodyParser from 'body-parser';\nimport schema from './data/schema';\nimport cors from 'cors';\nimport request from 'request';\nimport passport from 'passport';\nimport config from './config';\nimport { sequelizeInitial } from './data/connector';\nconst { maskErrors } = require('graphql-errors');\nconst jwt = require('jsonwebtoken');\nconst session = require('express-session');\nconst flash = require('connect-flash');\nconst crypto = require('crypto');\nconst axios = require('axios');\nconst querystring = require('querystring');\n// const privateJWT = crypto.createHash('md5').update(config.PARENT_APP_TOKEN).digest('hex')\nrequire('./auth.js');\n\nconst admin = require(\"firebase-admin\");\nconst serviceAccount = require(\"./driverapp-1470129684507-firebase-adminsdk-qd3ut-0b2e7204c7.json\");\nadmin.initializeApp({\n    credential: admin.credential.cert(serviceAccount)\n});\n\n\nvar BearerStrategy = require('passport-http-bearer').Strategy;\npassport.use(new BearerStrategy(\n    function(token, cb) {\n        try {\n            if (token == null) {\n                return cb(null, null)\n            }\n            console.log(token)\n            let user = jwt.verify(token, config.PARENT_APP_TOKEN);\n            console.log(user)\n            if (user && user != null) {\n                return cb(null, user)\n            } else {\n                return cb(null, null)\n            }\n        } catch (err) {\n            return cb(err.message)\n        }\n    }));\nconst GRAPHQL_PORT = 3000;\n\nconst graphQLServer = express();\ngraphQLServer.use(session({\n    secret: 'keyboard cat',\n    resave: false,\n    saveUninitialized: true,\n    cookie: { secure: true }\n}))\ngraphQLServer.use(flash())\ngraphQLServer.use(passport.initialize());\ngraphQLServer.use(passport.session());\n\n\nconst corsOptions = {\n    origin(origin, callback) {\n        callback(null, true);\n    },\n    credentials: true\n};\ngraphQLServer.use(cors(corsOptions));\nvar allowCrossDomain = function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n    res.header('Access-Control-Allow-Headers', 'Content-Type');\n    next();\n}\ngraphQLServer.use(allowCrossDomain)\n\n// maskErrors(schema);\ngraphQLServer.use('/graphql', passport.authenticate('bearer', { session: false }), graphqlHTTP(request => {\n    const startTime = Date.now();\n    var { user } = request\n    return {\n        schema: schema,\n        graphiql: true,\n        context: { user },\n        extensions({ document, variables, operationName, result }) {\n            return { runTime: Date.now() - startTime };\n        }\n    };\n}));\n\n\ngraphQLServer.use(bodyParser.json()); // support json encoded bodies\ngraphQLServer.use(bodyParser.urlencoded({ extended: true }));\n\ngraphQLServer.post('/sendSMS', passport.authenticate('bearer', { session: false }), (req, res) => {\n    if (req.user == null) {\n        res.status(401).send({ message: 'Unauthorize' })\n    } else {\n        var body = {\n            to: req.body.to.split(','),\n            text: req.body.text\n        }\n        var options = {\n            url: 'https://api.clickatell.com/rest/message',\n            headers: {\n                'Authorization': \"bearer 0WfPOyBctycsSud4NFQzSlq1hpEYfrLJb0pyqG.UrQyW24RJUchUx.J_n08vjw1U\",\n                'X-Version': '1',\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: body,\n            json: true\n        };\n        request.post(options, (error, response, body) => {\n            if (!error && response.statusCode == 202) {\n                res.send(body.data)\n            } else {\n                res.send(error)\n            }\n        })\n    }\n\n})\n\ngraphQLServer.post('/login', passport.authenticate('local', { session: false, failureFlash: true }), (req, res) => {\n    var token = jwt.sign({\n        id: req.user.id,\n        auth: true,\n        mutate: ['ALL'],\n        query: ['ALL'],\n        databases: req.user.databases,\n        email: req.user.email\n    }, config.PARENT_APP_TOKEN, { expiresIn: \"1d\" })\n    var { id, email, phone, companiesLogo } = req.user\n    res.send({\n        token: token,\n        user: { id, email, phone, companiesLogo }\n    })\n});\n\ngraphQLServer.post('/prepareEmailVerify', async(req, res) => {\n    var shareDB = sequelizeInitial('ecm_share')\n    var parent = await shareDB.ParentGlobal.find({\n        where: {\n            email: req.body.email\n        }\n    })\n    if (parent != null) {\n        var token = jwt.sign({ id: parent.get().id, auth: false, mutate: ['UPDATE_PASSWORD'], query: ['SELECT_PARENT_GLOBAL'] }, config.PARENT_APP_TOKEN, { expiresIn: 3600 })\n        res.send({\n            token: token\n        })\n    } else {\n        res.send({\n            token: \"\"\n        })\n    }\n})\n\ngraphQLServer.get('/testPush/:token', (req, res) => {\n\n    // var registrationToken = \"f0flvIMd2mc:APA91bEjaAmX-GRxu3W1WSyLrjkwLYoD34OD4Pzt4LnWWBCnh1ODvMEdc1fHcxiBKrO5cW-SnIs9vBnrAyUrg0ToMskUs4RrMb7T4Vu9DYVFL5MUmeOWQvu4X7YhSfM6WJPq_VxeQ1nz\"\n    var registrationToken = req.params.token\n    var payload = {\n        data: {\n            title: \"AUX Scrum\",\n            message: \"Scrum: Daily touchbase @ 10am Please be on time so we can cover everything on the agenda.\",\n            actions: JSON.stringify([\n                { icon: \"emailGuests\", title: \"EMAIL GUESTS\", callback: \"emailGuests\", foreground: false, inline: true, replyLabel: \"Enter your reply here\" },\n                { icon: \"snooze\", title: \"SNOOZE\", callback: \"snooze\", foreground: false }\n            ]),\n        }\n    };\n    admin.messaging().sendToDevice(\n            registrationToken,\n            payload, {\n                contentAvailable: true,\n                priority: \"normal\",\n                restrictedPackageName: \"com.ecoachmanager.parentapp\"\n            })\n        .then(function(response) {\n            // See the MessagingDevicesResponse reference documentation for\n            // the contents of response.\n            console.log(\"Successfully sent message:\", response);\n            res.send(response)\n        })\n        .catch(function(error) {\n            console.log(\"Error sending message:\", error);\n            res.send(error)\n        });\n})\n\ngraphQLServer.get('/companycode/:app_code', async(req, res) => {\n    let api_url = \"http://journeybug.local.ppcnseo.com/\"\n    let query_string = \"lib/api/?company=1\"\n    let companyCode = req.params.app_code\n\n    let companyData = await axios.post(api_url + query_string, querystring.stringify({ code: companyCode }))\n    console.log(companyData)\n\n\n})\n\ngraphQLServer.post('/passOnDevices', async(req, res) => {\n    var shareDB = sequelizeInitial('ecm_share')\n    var parent = await shareDB.ParentGlobal.find({\n        include: [{\n            model: shareDB.ParentToken,\n            attributes: ['push_token'],\n            required: true\n        }],\n        where: {\n            email: req.body.email\n        }\n    })\n    if (parent != null) {\n        var tokens = parent.get().tb_parent_tokens.map((item) => item.push_token)\n        var payload = {\n            data: Object.assign({}, req.body.data)\n        }\n        console.log(tokens)\n        console.log(payload)\n        admin.messaging().sendToDevice(\n                tokens,\n                payload, {\n                    contentAvailable: true,\n                    priority: \"normal\",\n                })\n            .then(function(response) {\n                // See the MessagingDevicesResponse reference documentation for\n                // the contents of response.\n                console.log(\"Successfully sent message:\", response);\n                res.send(response)\n            })\n            .catch(function(error) {\n                console.log(\"Error sending message:\", error);\n                res.send(error)\n            });\n    } else {\n        res.send({ email: req.body.email, status: false, msg: 'Not found token for this parent' })\n    }\n\n})\n\n\n// graphQLServer.get('/refreshJWT', passport.authenticate('bearer', { session: false }), (req, res) => {\n//     Parent.find({\n//             attributes: ['token', 'parent_id'],\n//             where: {\n//                 token: {\n//                     $eq: req.user\n//                 }\n//             }\n//         })\n//         .then((parent) => {\n//             if (parent != null) {\n//                 var token = jwt.sign({ id: parent.parent_id, }, config.JWT_SECRET, { expiresIn: 3600 })\n//                 Parent.update({ token: token }, { where: { parent_id: parent.parent_id } })\n//                     .then(() => {\n//                         res.send({\n//                             token: token\n//                         })\n//                     })\n//             } else {\n//                 res.send({ message: 'Not found this token in system' })\n//             }\n//         })\n// })\n\ngraphQLServer.listen(GRAPHQL_PORT, () => console.log(\n    `GraphiQL is now running on http://localhost:${GRAPHQL_PORT}/graphiql`\n));"]}