{"version":3,"sources":["../../src/data/schema.js"],"names":["typeDefs","schema","resolvers"],"mappings":";;;;;;AAAA;;AAIA;;;;;;AAEA,IAAMA,4xGAAN;;AA0JA,IAAMC,SAAS,wCAAqB,EAAED,kBAAF,EAAYE,8BAAZ,EAArB,CAAf;;kBAEeD,M","file":"schema.js","sourcesContent":["import {\r\n    makeExecutableSchema,\r\n} from 'graphql-tools';\r\n\r\nimport resolvers from './resolvers';\r\n\r\nconst typeDefs = `\r\n\r\n    scalar Date\r\n\r\n    type Query {\r\n        parentGlobalSelect(email: String!): ParentGlobal\r\n        parent(email: String!): [ParentBySchool]\r\n        parentPassengers(email: String!): [PassengersBySchool]\r\n        schoolContact: [SchoolContact]\r\n    }\r\n\r\n    type Mutation {\r\n        parentPasswordUpdate(input: UpdatePasswordInput!) : UpdatePasswordPayload\r\n        parentPushTokenCreate(input: CreateParentPushTokenInput!) : CreateParentPushTokenPayload\r\n    }\r\n\r\n    input CreateParentPushTokenInput {\r\n        push_token: String!\r\n    }\r\n    \r\n    type CreateParentPushTokenPayload {\r\n        msg: String!\r\n        status: Boolean!\r\n    }\r\n    \r\n    input UpdatePasswordInput {\r\n        email: String!\r\n        password: String!\r\n    }\r\n    \r\n    type UpdatePasswordPayload {\r\n        msg: String!\r\n        status: Boolean!\r\n    }\r\n\r\n    type ParentGlobal {\r\n        email: String\r\n        phone: String\r\n    }\r\n\r\n    type ParentBySchool {\r\n        school_name: String!\r\n        parent: Parent!\r\n    }\r\n    \r\n\r\n    type Parent {\r\n        parent_id: Int!\r\n        gender: String\r\n        parent_name: String\r\n        phone_m: String\r\n        email: String \r\n    }\r\n\r\n    type PassengersBySchool {\r\n        school_name: String!\r\n        passengers: [Passenger]\r\n    }\r\n\r\n    type Passenger {\r\n        uniqueID: String\r\n        passenger_id: Int!\r\n        first_name: String!\r\n        surname: String\r\n        date_of_birth: String\r\n        gender: String\r\n        address: String\r\n        phone_m: String!\r\n        email: String!\r\n        account: Int!\r\n        RFID: String!\r\n        routeToday: [PassengerRoute]\r\n    }\r\n\r\n    type PassengerRoute {\r\n        j_id: Int!\r\n        collection_address: PickUpRoute!\r\n        destination_address: DropOffRoute!\r\n        peroid: String!\r\n        date_today: String!\r\n        extra_address: [ExtraRoute]\r\n        tracking: CurrentTracking\r\n    }\r\n    \r\n    type PickUpRoute {\r\n        time_start: String!\r\n        address: String!\r\n        progress: Int! \r\n        latlng: String!\r\n        passenger_log: [PassengerLog]!\r\n    }\r\n\r\n    type DropOffRoute {\r\n        time_end: String!\r\n        address: String!\r\n        progress: Int!\r\n        latlng: String!\r\n        passenger_log: [PassengerLog]\r\n    }\r\n\r\n    type PassengerLog {\r\n        log_type_code: Int!\r\n        log_type_name: String!\r\n        log_note: String!\r\n        date_time_scan: Date!\r\n        route_type: Int!\r\n        address: MovementAddress\r\n        movement_order: Int!\r\n    }\r\n\r\n    type ExtraRoute {\r\n        movement_order: Int!\r\n        latlng: String!\r\n    }\r\n\r\n    type MovementAddress {\r\n        collection: String\r\n        destination: String\r\n    }\r\n\r\n    type PassengerInRoute {\r\n        passenger_id: Int!\r\n        pickup: Int!\r\n        passenger: Passenger\r\n    }\r\n\r\n    type RouteByQuote {\r\n        movement_id: Int!\r\n        collection: String!\r\n        destination: String!\r\n        pickup: [PassengerInRoute]!\r\n        dropoff: [PassengerInRoute]!\r\n    }\r\n\r\n    type CurrentTracking {\r\n        lat: String!\r\n        lng: String!\r\n        timestamp: Date!\r\n        j_id: Int!\r\n    }\r\n\r\n    type SchoolContact {\r\n        name: String!\r\n        address: String!\r\n        tracking_phone: String!\r\n        tracking_email: String!\r\n    }\r\n\r\n    schema {\r\n        query: Query\r\n        mutation: Mutation\r\n    }\r\n`;\r\n\r\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\r\n\r\nexport default schema;"]}